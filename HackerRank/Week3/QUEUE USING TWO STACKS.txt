QUEUE USING TWO STACKS


#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#define MAX 100000
typedef struct {
    int arr[MAX];
    int top;
}Stack;
void init(Stack *s){
    s->top = -1;
}
int isEmpty(Stack *s){
    return s->top == -1;
}
void push(Stack *s, int val){
    s->arr[++(s->top)] = val;
}
int pop(Stack *s){
    return s->arr[(s->top)--];
}
int peek(Stack *s){
    return s->arr[s->top];
}
Stack stack_in, stack_out;
void enqueue(int x){
    push(&stack_in, x);
}
void shiftStacks(){
    if(isEmpty(&stack_out)){
        while(!isEmpty(&stack_in)){
            push(&stack_out, pop(&stack_in));
        }
    }
}
void dequeue(){
    shiftStacks();
    if( !isEmpty(&stack_out)){
        pop(&stack_out);
    }    
}
int front(){
    shiftStacks();
    return peek(&stack_out);
}
int main() {
    init(&stack_in);
    init(&stack_out);
    int q;
    scanf("%d", &q);
    while(q--){
        int type, x;
        scanf("%d", &type);
        if(type == 1){
            scanf("%d", &x);
            enqueue(x);
        }else if (type == 2){
            dequeue();
        }else if (type == 3) {
            printf("%d\n",front());
        }
    }   
    return 0;
}
